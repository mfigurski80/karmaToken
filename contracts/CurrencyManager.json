{
  "contractName": "CurrencyManager",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "enum CurrencyType",
          "name": "currencyType",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "location",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ERC1155Id",
          "type": "uint256"
        }
      ],
      "name": "CurrencyAdded",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "currencies",
      "outputs": [
        {
          "internalType": "enum CurrencyType",
          "name": "currencyType",
          "type": "uint8"
        },
        {
          "internalType": "uint88",
          "name": "ERC1155SmallId",
          "type": "uint88"
        },
        {
          "internalType": "address",
          "name": "location",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "ERC1155Id",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "location",
          "type": "address"
        }
      ],
      "name": "addERC20Currency",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "location",
          "type": "address"
        }
      ],
      "name": "addERC721Currency",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "location",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "addERC1155TokenCurrency",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "location",
          "type": "address"
        }
      ],
      "name": "addERC1155NFTCurrency",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum CurrencyType\",\"name\":\"currencyType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"location\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ERC1155Id\",\"type\":\"uint256\"}],\"name\":\"CurrencyAdded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"location\",\"type\":\"address\"}],\"name\":\"addERC1155NFTCurrency\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"location\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"addERC1155TokenCurrency\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"location\",\"type\":\"address\"}],\"name\":\"addERC20Currency\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"location\",\"type\":\"address\"}],\"name\":\"addERC721Currency\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"currencies\",\"outputs\":[{\"internalType\":\"enum CurrencyType\",\"name\":\"currencyType\",\"type\":\"uint8\"},{\"internalType\":\"uint88\",\"name\":\"ERC1155SmallId\",\"type\":\"uint88\"},{\"internalType\":\"address\",\"name\":\"location\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"ERC1155Id\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addERC1155NFTCurrency(address)\":{\"details\":\"Note that no tokenId is required -- since we know the count to be 1, the structures that reference this currency can use their field to specify the tokenId.\",\"params\":{\"location\":\"address of ERC1155 contract being added\"}},\"addERC1155TokenCurrency(address,uint256)\":{\"details\":\"TokenId is required because structures that reference this currency are only able to specify one field -- the amount, and so the tokenId must be constant and specified here\",\"params\":{\"location\":\"address of the ERC1155 contract being added\",\"tokenId\":\"specific tokenId to associate with this ERC1155 currency listing.\"}},\"addERC20Currency(address)\":{\"params\":{\"location\":\"address of the ERC20 contract being added\"}},\"addERC721Currency(address)\":{\"details\":\"Add a new currency of type ERC721\",\"params\":{\"location\":\"address of the ERC721 contract being added\"}}},\"stateVariables\":{\"currencies\":{\"details\":\"Note that position 0 will always be taken by the Ethereum currency type, as ensured by the constructor.\"}},\"title\":\"\\ud83d\\udcb4 Currency contract that maintains an internal currency listings\",\"version\":1},\"userdoc\":{\"events\":{\"CurrencyAdded(uint256,uint8,address,uint256)\":{\"notice\":\"New currency has been added to internal listing\"}},\"kind\":\"user\",\"methods\":{\"addERC1155NFTCurrency(address)\":{\"notice\":\"Add a new currency of type ERC1155 NFT.\"},\"addERC1155TokenCurrency(address,uint256)\":{\"notice\":\"Add a new currency of type ERC1155 Token\"},\"addERC20Currency(address)\":{\"notice\":\"Add a new currency of type ERC20\"},\"currencies(uint256)\":{\"notice\":\"Array holding currency listing.\"}},\"notice\":\"This listing is referred to in all future bonds and collateral structures, used to figure out payment.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/CurrencyManager.sol\":\"CurrencyManager\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xfce1eb6398eae0e2b50251140866a70a3106193f101972c878bba1dbf44929ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f0709c3f462b28b400f57db181254ad970967c3b49a8948ef5e05929b106ffe\",\"dweb:/ipfs/QmNe3sRmPKw1T7q7m733tk7tFKpi3jo9PCisDPMbjeg3kJ\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf101e8720213560fab41104d53b3cc7ba0456ef3a98455aa7f022391783144a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e7820bcf567e6892d937c3cb10db263a4042e446799bca602535868d822384e\",\"dweb:/ipfs/QmPG2oeDjKncqsEeyYGjAN7CwAJmMgHterXGGnpzhha4z7\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]},\"project:/contracts/CurrencyManager.sol\":{\"keccak256\":\"0x7d7a7031bd8e51594068bd55e33721bc5204435ce7dd8031e3c4b7dada476be5\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://52555d40281a2248fef5ddf63a38007fdeb304cf8f9be2e93c026c2947c3efc8\",\"dweb:/ipfs/QmQq8eZPEXhgzS25ZsqTwSdZ1qD1s2zKnfXYv6CSsuLM93\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040805160808101825260008082526020820181905291810182905260608101829052815460018082018455928052815160029091027f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56301805492939092839160ff199091169083600481111561008a5761008a6100e8565b02179055506020820151815460408401516001600160a01b03166c01000000000000000000000000026001600160601b036001600160581b03909316610100029290921660ff909116171781556060909101516001909101556100fe565b634e487b7160e01b600052602160045260246000fd5b6104d98061010d6000396000f3fe60806040526004361061005a5760003560e01c8063cd30e2cd11610043578063cd30e2cd14610087578063f6d1c2711461009a578063fe9accf9146100d357600080fd5b80631f5e180e1461005f57806368b0d5a814610074575b600080fd5b61007261006d366004610373565b6100e6565b005b610072610082366004610395565b610121565b610072610095366004610373565b610179565b3480156100a657600080fd5b506100ba6100b53660046103bf565b610190565b6040516100ca94939291906103fa565b60405180910390f35b6100726100e1366004610373565b6101ee565b604080516080810190915261011e908060045b81526000602082018190526001600160a01b0385166040830152606090910152610205565b50565b60408051608081018252600381526affffffffffffffffffffff8316602082018190526001600160a01b038516928201929092526000606082015290821461016b57606081018290525b61017481610205565b505050565b604080516080810190915261011e908060026100f9565b600081815481106101a057600080fd5b60009182526020909120600290910201805460019091015460ff8216925061010082046affffffffffffffffffffff16916c0100000000000000000000000090046001600160a01b03169084565b604080516080810190915261011e908060016100f9565b6000805460018181018355918052825160029091027f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630180548493919291839160ff19169083600481111561025c5761025c61048d565b02179055506020820151815460408401516001600160a01b03166c01000000000000000000000000026bffffffffffffffffffffffff6affffffffffffffffffffff909316610100029290921660ff9091161717815560609091015160019091015560006003825160048111156102d5576102d561048d565b14156103025781602001516affffffffffffffffffffff1690508160600151600014610302575060608101515b6000547f2de521bc3664deadab052ac566d3e29f17b816025957077cd43ae461ebe167079061033390600190610468565b8351604080860151905161034b939291908690610439565b60405180910390a15050565b80356001600160a01b038116811461036e57600080fd5b919050565b60006020828403121561038557600080fd5b61038e82610357565b9392505050565b600080604083850312156103a857600080fd5b6103b183610357565b946020939093013593505050565b6000602082840312156103d157600080fd5b5035919050565b600581106103f657634e487b7160e01b600052602160045260246000fd5b9052565b6080810161040882876103d8565b6affffffffffffffffffffff851660208301526001600160a01b038416604083015282606083015295945050505050565b8481526080810161044d60208301866103d8565b6001600160a01b039390931660408201526060015292915050565b60008282101561048857634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220e1bbb1ea3126f50d9430d22e2c4201cbd9bed6df4e6ffa3db74c13d63328bb8264736f6c63430008060033",
  "deployedBytecode": "0x60806040526004361061005a5760003560e01c8063cd30e2cd11610043578063cd30e2cd14610087578063f6d1c2711461009a578063fe9accf9146100d357600080fd5b80631f5e180e1461005f57806368b0d5a814610074575b600080fd5b61007261006d366004610373565b6100e6565b005b610072610082366004610395565b610121565b610072610095366004610373565b610179565b3480156100a657600080fd5b506100ba6100b53660046103bf565b610190565b6040516100ca94939291906103fa565b60405180910390f35b6100726100e1366004610373565b6101ee565b604080516080810190915261011e908060045b81526000602082018190526001600160a01b0385166040830152606090910152610205565b50565b60408051608081018252600381526affffffffffffffffffffff8316602082018190526001600160a01b038516928201929092526000606082015290821461016b57606081018290525b61017481610205565b505050565b604080516080810190915261011e908060026100f9565b600081815481106101a057600080fd5b60009182526020909120600290910201805460019091015460ff8216925061010082046affffffffffffffffffffff16916c0100000000000000000000000090046001600160a01b03169084565b604080516080810190915261011e908060016100f9565b6000805460018181018355918052825160029091027f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630180548493919291839160ff19169083600481111561025c5761025c61048d565b02179055506020820151815460408401516001600160a01b03166c01000000000000000000000000026bffffffffffffffffffffffff6affffffffffffffffffffff909316610100029290921660ff9091161717815560609091015160019091015560006003825160048111156102d5576102d561048d565b14156103025781602001516affffffffffffffffffffff1690508160600151600014610302575060608101515b6000547f2de521bc3664deadab052ac566d3e29f17b816025957077cd43ae461ebe167079061033390600190610468565b8351604080860151905161034b939291908690610439565b60405180910390a15050565b80356001600160a01b038116811461036e57600080fd5b919050565b60006020828403121561038557600080fd5b61038e82610357565b9392505050565b600080604083850312156103a857600080fd5b6103b183610357565b946020939093013593505050565b6000602082840312156103d157600080fd5b5035919050565b600581106103f657634e487b7160e01b600052602160045260246000fd5b9052565b6080810161040882876103d8565b6affffffffffffffffffffff851660208301526001600160a01b038416604083015282606083015295945050505050565b8481526080810161044d60208301866103d8565b6001600160a01b039390931660408201526060015292915050565b60008282101561048857634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220e1bbb1ea3126f50d9430d22e2c4201cbd9bed6df4e6ffa3db74c13d63328bb8264736f6c63430008060033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:143:32",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:32",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "46:95:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "63:1:32",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "70:3:32",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "75:10:32",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "66:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "66:20:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "56:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "56:31:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "56:31:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "103:1:32",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "106:4:32",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "96:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "96:15:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "96:15:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "127:1:32",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "130:4:32",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "120:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "120:15:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "120:15:32"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "14:127:32"
          }
        ]
      },
      "contents": "{\n    { }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n}",
      "id": 32,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2615:32",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:32",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "63:147:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "73:29:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "82:12:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:20:32"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "73:5:32"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "188:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "197:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "200:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "190:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "190:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "190:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "124:5:32"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "135:5:32"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "142:42:32",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "131:3:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "131:54:32"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "121:2:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "121:65:32"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "114:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "114:73:32"
                  },
                  "nodeType": "YulIf",
                  "src": "111:2:32"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "42:6:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:32",
                "type": ""
              }
            ],
            "src": "14:196:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "285:116:32",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "331:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "340:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "343:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "333:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "333:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "333:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "306:7:32"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "315:9:32"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "302:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "302:23:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "327:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "298:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "298:32:32"
                  },
                  "nodeType": "YulIf",
                  "src": "295:2:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "356:39:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "385:9:32"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "366:18:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "366:29:32"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "356:6:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "251:9:32",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "262:7:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "274:6:32",
                "type": ""
              }
            ],
            "src": "215:186:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "493:167:32",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "539:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "548:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "551:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "541:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "541:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "541:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "514:7:32"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "523:9:32"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "510:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "510:23:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "535:2:32",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "506:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "506:32:32"
                  },
                  "nodeType": "YulIf",
                  "src": "503:2:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "564:39:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "593:9:32"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "574:18:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "574:29:32"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "564:6:32"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "612:42:32",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "639:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "650:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "635:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "635:18:32"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "622:12:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "622:32:32"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "612:6:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "451:9:32",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "462:7:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "474:6:32",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "482:6:32",
                "type": ""
              }
            ],
            "src": "406:254:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "735:110:32",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "781:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "790:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "793:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "783:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "783:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "783:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "756:7:32"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "765:9:32"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "752:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "752:23:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "777:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "748:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "748:32:32"
                  },
                  "nodeType": "YulIf",
                  "src": "745:2:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "806:33:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "829:9:32"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "816:12:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "816:23:32"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "806:6:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "701:9:32",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "712:7:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "724:6:32",
                "type": ""
              }
            ],
            "src": "665:180:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "904:243:32",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "946:168:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "967:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "970:77:32",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "960:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "960:88:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "960:88:32"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1068:1:32",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1071:4:32",
                              "type": "",
                              "value": "0x21"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1061:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1061:15:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1061:15:32"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1096:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1099:4:32",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1089:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1089:15:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1089:15:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "927:5:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "934:1:32",
                            "type": "",
                            "value": "5"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "924:2:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "924:12:32"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "917:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "917:20:32"
                  },
                  "nodeType": "YulIf",
                  "src": "914:2:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1130:3:32"
                      },
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1135:5:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1123:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1123:18:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1123:18:32"
                }
              ]
            },
            "name": "abi_encode_enum_CurrencyType",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "888:5:32",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "895:3:32",
                "type": ""
              }
            ],
            "src": "850:297:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1350:308:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1360:27:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1372:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1383:3:32",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1368:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1368:19:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1360:4:32"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1425:6:32"
                      },
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1433:9:32"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_enum_CurrencyType",
                      "nodeType": "YulIdentifier",
                      "src": "1396:28:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1396:47:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1396:47:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1463:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1474:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1459:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1459:18:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "1483:6:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1491:24:32",
                            "type": "",
                            "value": "0xffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1479:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1479:37:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1452:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1452:65:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1452:65:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1537:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1548:2:32",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1533:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1533:18:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "1557:6:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1565:42:32",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1553:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1553:55:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1526:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1526:83:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1526:83:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1629:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1640:2:32",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1625:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1625:18:32"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "1645:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1618:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1618:34:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1618:34:32"
                }
              ]
            },
            "name": "abi_encode_tuple_t_enum$_CurrencyType_$3105_t_uint88_t_address_t_uint256__to_t_uint8_t_uint88_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1295:9:32",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1306:6:32",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1314:6:32",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1322:6:32",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1330:6:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1341:4:32",
                "type": ""
              }
            ],
            "src": "1152:506:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1863:277:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1873:27:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1885:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1896:3:32",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1881:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1881:19:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1873:4:32"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1916:9:32"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1927:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1909:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1909:25:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1909:25:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1972:6:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1984:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1995:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1980:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1980:18:32"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_enum_CurrencyType",
                      "nodeType": "YulIdentifier",
                      "src": "1943:28:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1943:56:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1943:56:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2019:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2030:2:32",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2015:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2015:18:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "2039:6:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2047:42:32",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2035:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2035:55:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2008:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2008:83:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2008:83:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2111:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2122:2:32",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2107:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2107:18:32"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "2127:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2100:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2100:34:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2100:34:32"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_enum$_CurrencyType_$3105_t_address_t_uint256__to_t_uint256_t_uint8_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1808:9:32",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1819:6:32",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1827:6:32",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1835:6:32",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1843:6:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1854:4:32",
                "type": ""
              }
            ],
            "src": "1663:477:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2194:230:32",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2224:168:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2245:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2248:77:32",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2238:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2238:88:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2238:88:32"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2346:1:32",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2349:4:32",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2339:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2339:15:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2339:15:32"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2374:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2377:4:32",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2367:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2367:15:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2367:15:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2210:1:32"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2213:1:32"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "2207:2:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2207:8:32"
                  },
                  "nodeType": "YulIf",
                  "src": "2204:2:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2401:17:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2413:1:32"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2416:1:32"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "2409:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2409:9:32"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "2401:4:32"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "2176:1:32",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "2179:1:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "2185:4:32",
                "type": ""
              }
            ],
            "src": "2145:279:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2461:152:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2478:1:32",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2481:77:32",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2471:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2471:88:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2471:88:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2575:1:32",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2578:4:32",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2568:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2568:15:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2568:15:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2599:1:32",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2602:4:32",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2592:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2592:15:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2592:15:32"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "2429:184:32"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_enum_CurrencyType(value, pos)\n    {\n        if iszero(lt(value, 5))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(pos, value)\n    }\n    function abi_encode_tuple_t_enum$_CurrencyType_$3105_t_uint88_t_address_t_uint256__to_t_uint8_t_uint88_t_address_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        abi_encode_enum_CurrencyType(value0, headStart)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffff))\n        mstore(add(headStart, 64), and(value2, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_uint256_t_enum$_CurrencyType_$3105_t_address_t_uint256__to_t_uint256_t_uint8_t_address_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        abi_encode_enum_CurrencyType(value1, add(headStart, 32))\n        mstore(add(headStart, 64), and(value2, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 96), value3)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        diff := sub(x, y)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n}",
      "id": 32,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "903:4774:18:-:0;;;1394:94;;;;;;;;;-1:-1:-1;1434:46:18;;;;;;;;-1:-1:-1;1434:46:18;;;;;;;;;;;;;;;;;;;;;1418:63;;;;;;;;;;;;;;;;;;;;;1434:46;;1418:63;;;;-1:-1:-1;;1418:63:18;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;1418:63:18;;;;;;;;;;-1:-1:-1;;;;;1418:63:18;;;-1:-1:-1;;;;;;;;;;1418:63:18;;;;;;;;;;;;;;;;;;;;;;;;;;;903:4774;;14:127:32;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;46:95;903:4774:18;;;;;;",
  "deployedSourceMap": "903:4774:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3197:152;;;;;;:::i;:::-;;:::i;:::-;;2482:392;;;;;;:::i;:::-;;:::i;1899:144::-;;;;;;:::i;:::-;;:::i;1155:28::-;;;;;;;;;;-1:-1:-1;1155:28:18;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;1623:142;;;;;;:::i;:::-;;:::i;3197:152::-;3292:49;;;;;;;;;3279:63;;3292:49;3301:23;3292:49;;;3326:1;3292:49;;;;;;-1:-1:-1;;;;;3292:49:18;;;;;;;;;;;3279:12;:63::i;:::-;3197:152;:::o;2482:392::-;2631:123;;;;;;;;2653:25;2631:123;;;;;;;;;;;-1:-1:-1;;;;;2631:123:18;;;;;;;;;-1:-1:-1;2631:123:18;;;;;2768:27;;2764:79;;2811:11;;;:21;;;2764:79;2852:15;2865:1;2852:12;:15::i;:::-;2601:273;2482:392;;:::o;1899:144::-;1990:45;;;;;;;;;1977:59;;1990:45;1999:19;1990:45;;1155:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1155:28:18;;;;;;;;;-1:-1:-1;;;;;1155:28:18;;;:::o;1623:142::-;1713:44;;;;;;;;;1700:58;;1713:44;1722:18;1713:44;;5269:406;5329:10;:18;;;;;;;;;;;;;;;;;;;;;5345:1;;5329:18;;;;;-1:-1:-1;;5329:18:18;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;5329:18:18;;;;;;;;;;-1:-1:-1;;;;;5329:18:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5403:25;5385:14;;:43;;;;;;;;:::i;:::-;;5381:147;;;5449:1;:16;;;5444:21;;;;5483:1;:11;;;5498:1;5483:16;5479:38;;-1:-1:-1;5506:11:18;;;;5479:38;5569:10;:17;5542:126;;5569:21;;5589:1;;5569:21;:::i;:::-;5604:14;;5632:10;;;;;5542:126;;;;;5604:14;5632:10;5656:2;;5542:126;:::i;:::-;;;;;;;;5319:356;5269:406;:::o;14:196:32:-;82:20;;-1:-1:-1;;;;;131:54:32;;121:65;;111:2;;200:1;197;190:12;111:2;63:147;;;:::o;215:186::-;274:6;327:2;315:9;306:7;302:23;298:32;295:2;;;343:1;340;333:12;295:2;366:29;385:9;366:29;:::i;:::-;356:39;285:116;-1:-1:-1;;;285:116:32:o;406:254::-;474:6;482;535:2;523:9;514:7;510:23;506:32;503:2;;;551:1;548;541:12;503:2;574:29;593:9;574:29;:::i;:::-;564:39;650:2;635:18;;;;622:32;;-1:-1:-1;;;493:167:32:o;665:180::-;724:6;777:2;765:9;756:7;752:23;748:32;745:2;;;793:1;790;783:12;745:2;-1:-1:-1;816:23:32;;735:110;-1:-1:-1;735:110:32:o;850:297::-;934:1;927:5;924:12;914:2;;-1:-1:-1;;;967:1:32;960:88;1071:4;1068:1;1061:15;1099:4;1096:1;1089:15;914:2;1123:18;;904:243::o;1152:506::-;1383:3;1368:19;;1396:47;1372:9;1425:6;1396:47;:::i;:::-;1491:24;1483:6;1479:37;1474:2;1463:9;1459:18;1452:65;-1:-1:-1;;;;;1557:6:32;1553:55;1548:2;1537:9;1533:18;1526:83;1645:6;1640:2;1629:9;1625:18;1618:34;1350:308;;;;;;;:::o;1663:477::-;1909:25;;;1896:3;1881:19;;1943:56;1995:2;1980:18;;1972:6;1943:56;:::i;:::-;-1:-1:-1;;;;;2035:55:32;;;;2030:2;2015:18;;2008:83;2122:2;2107:18;2100:34;1863:277;;-1:-1:-1;;1863:277:32:o;2145:279::-;2185:4;2213:1;2210;2207:8;2204:2;;;-1:-1:-1;;;2245:1:32;2238:88;2349:4;2346:1;2339:15;2377:4;2374:1;2367:15;2204:2;-1:-1:-1;2409:9:32;;2194:230::o;2429:184::-;-1:-1:-1;;;2478:1:32;2471:88;2578:4;2575:1;2568:15;2602:4;2599:1;2592:15",
  "source": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\";\n\n/// @notice Enum representing various supported currency types\nenum CurrencyType {\n    Ether,\n    ERC20,\n    ERC721,\n    ERC1155Token,\n    ERC1155NFT\n}\n\n/// @notice Expanded Currency structure to be referenced by bonds\nstruct Currency {\n    CurrencyType currencyType; // {ERC20, ERC721, ERC1155 tokens, ERC1155 NFTs} = {0,1,2,3}\n    uint88 ERC1155SmallId;\n    address location;\n    uint256 ERC1155Id; // if ERC1155 and id > 500 septillion, use extra slot\n}\n\n/**\n * @title 💴 Currency contract that maintains an internal currency listings\n * @notice This listing is referred to in all future bonds and\n * collateral structures, used to figure out payment.\n */\ncontract CurrencyManager {\n    // TODO: generic addCurrency?\n\n    /**\n     * @notice Array holding currency listing.\n     * @dev Note that position 0 will always be taken by the Ethereum\n     * currency type, as ensured by the constructor.\n     */\n    Currency[] public currencies;\n\n    /// @notice New currency has been added to internal listing\n    event CurrencyAdded(\n        uint256 id,\n        CurrencyType currencyType,\n        address location,\n        uint256 ERC1155Id\n    );\n\n    constructor() {\n        currencies.push(Currency(CurrencyType.Ether, 0, address(0), 0));\n    }\n\n    /**\n     * @notice Add a new currency of type ERC20\n     * @param location address of the ERC20 contract being added\n     */\n    function addERC20Currency(address location) public payable virtual {\n        _addCurrency(Currency(CurrencyType.ERC20, 0, location, 0));\n    }\n\n    /**\n     * @dev Add a new currency of type ERC721\n     * @param location address of the ERC721 contract being added\n     */\n    function addERC721Currency(address location) public payable virtual {\n        _addCurrency(Currency(CurrencyType.ERC721, 0, location, 0));\n    }\n\n    /**\n     * @notice Add a new currency of type ERC1155 Token\n     * @param location address of the ERC1155 contract being added\n     * @param tokenId specific tokenId to associate with this ERC1155\n     * currency listing.\n     * @dev TokenId is required because structures that reference\n     * this currency are only able to specify one field -- the amount, and\n     * so the tokenId must be constant and specified here\n     */\n    function addERC1155TokenCurrency(address location, uint256 tokenId)\n        public\n        payable\n        virtual\n    {\n        Currency memory c = Currency(\n            CurrencyType.ERC1155Token,\n            uint88(tokenId),\n            location,\n            0\n        );\n        if (c.ERC1155SmallId != tokenId) {\n            c.ERC1155Id = tokenId;\n        }\n        _addCurrency(c);\n    }\n\n    /**\n     * @notice Add a new currency of type ERC1155 NFT.\n     * @dev Note that no tokenId is required -- since we know the count to\n     * be 1, the structures that reference this currency can use their\n     * field to specify the tokenId.\n     * @param location address of ERC1155 contract being added\n     */\n    function addERC1155NFTCurrency(address location) public payable virtual {\n        _addCurrency(Currency(CurrencyType.ERC1155NFT, 0, location, 0));\n    }\n\n    /**\n     * @dev Safely tansfer any supported currency using its interface\n     * @param cur Currency type to transfer\n     * @param from Which address to transfer from\n     * @param to Which address to transfer to\n     * @param amountOrId Either amount or id.\n     * @param data bytes to pass on with the transaction\n     * @dev The amountOrId paramenter represents the missing integer\n     * that Currency doesn't store itself -- in the case of a fungible\n     * token, the amount, but in the case of an NFT, the token id.\n     */\n    function _transferGenericCurrency(\n        Currency storage cur,\n        address from,\n        address to,\n        uint256 amountOrId,\n        bytes memory data\n    ) internal returns (bool) {\n        if (cur.currencyType == CurrencyType.ERC20) {\n            if (from == address(this)) {\n                return IERC20(cur.location).transfer(to, amountOrId);\n            } else {\n                return IERC20(cur.location).transferFrom(from, to, amountOrId);\n            }\n        } else if (cur.currencyType == CurrencyType.ERC721) {\n            IERC721(cur.location).safeTransferFrom(from, to, amountOrId, \"\");\n        } else if (cur.currencyType == CurrencyType.ERC1155Token) {\n            if (cur.ERC1155Id == 0) cur.ERC1155Id = uint256(cur.ERC1155SmallId);\n            IERC1155(cur.location).safeTransferFrom(\n                from,\n                to,\n                cur.ERC1155Id,\n                amountOrId,\n                data\n            );\n        } else if (cur.currencyType == CurrencyType.ERC1155NFT) {\n            IERC1155(cur.location).safeTransferFrom(\n                from,\n                to,\n                amountOrId,\n                1,\n                data\n            );\n        }\n        return true;\n    }\n\n    /**\n     * @dev Internal method to append a new currency efficiently.\n     * @param c pre-build Currency structure to be added.\n     */\n    function _addCurrency(Currency memory c) internal {\n        currencies.push(c);\n        uint256 id = 0;\n        if (c.currencyType == CurrencyType.ERC1155Token) {\n            id = c.ERC1155SmallId;\n            if (c.ERC1155Id != 0) id = c.ERC1155Id;\n        }\n        emit CurrencyAdded(\n            currencies.length - 1,\n            c.currencyType,\n            c.location,\n            id\n        );\n    }\n}\n",
  "sourcePath": "/home/runner/work/karmaToken/karmaToken/contracts/CurrencyManager.sol",
  "ast": {
    "absolutePath": "project:/contracts/CurrencyManager.sol",
    "exportedSymbols": {
      "Currency": [
        3115
      ],
      "CurrencyManager": [
        3422
      ],
      "CurrencyType": [
        3105
      ],
      "IERC1155": [
        1310
      ],
      "IERC165": [
        2529
      ],
      "IERC20": [
        1990
      ],
      "IERC721": [
        2131
      ]
    },
    "id": 3423,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3096,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:18"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 3097,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3423,
        "sourceUnit": 1991,
        "src": "64:56:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "id": 3098,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3423,
        "sourceUnit": 2132,
        "src": "121:58:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
        "file": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
        "id": 3099,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3423,
        "sourceUnit": 1311,
        "src": "180:60:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "canonicalName": "CurrencyType",
        "id": 3105,
        "members": [
          {
            "id": 3100,
            "name": "Ether",
            "nameLocation": "329:5:18",
            "nodeType": "EnumValue",
            "src": "329:5:18"
          },
          {
            "id": 3101,
            "name": "ERC20",
            "nameLocation": "340:5:18",
            "nodeType": "EnumValue",
            "src": "340:5:18"
          },
          {
            "id": 3102,
            "name": "ERC721",
            "nameLocation": "351:6:18",
            "nodeType": "EnumValue",
            "src": "351:6:18"
          },
          {
            "id": 3103,
            "name": "ERC1155Token",
            "nameLocation": "363:12:18",
            "nodeType": "EnumValue",
            "src": "363:12:18"
          },
          {
            "id": 3104,
            "name": "ERC1155NFT",
            "nameLocation": "381:10:18",
            "nodeType": "EnumValue",
            "src": "381:10:18"
          }
        ],
        "name": "CurrencyType",
        "nameLocation": "310:12:18",
        "nodeType": "EnumDefinition",
        "src": "305:88:18"
      },
      {
        "canonicalName": "Currency",
        "id": 3115,
        "members": [
          {
            "constant": false,
            "id": 3108,
            "mutability": "mutable",
            "name": "currencyType",
            "nameLocation": "496:12:18",
            "nodeType": "VariableDeclaration",
            "scope": 3115,
            "src": "483:25:18",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_CurrencyType_$3105",
              "typeString": "enum CurrencyType"
            },
            "typeName": {
              "id": 3107,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3106,
                "name": "CurrencyType",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3105,
                "src": "483:12:18"
              },
              "referencedDeclaration": 3105,
              "src": "483:12:18",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_CurrencyType_$3105",
                "typeString": "enum CurrencyType"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3110,
            "mutability": "mutable",
            "name": "ERC1155SmallId",
            "nameLocation": "582:14:18",
            "nodeType": "VariableDeclaration",
            "scope": 3115,
            "src": "575:21:18",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint88",
              "typeString": "uint88"
            },
            "typeName": {
              "id": 3109,
              "name": "uint88",
              "nodeType": "ElementaryTypeName",
              "src": "575:6:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint88",
                "typeString": "uint88"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3112,
            "mutability": "mutable",
            "name": "location",
            "nameLocation": "610:8:18",
            "nodeType": "VariableDeclaration",
            "scope": 3115,
            "src": "602:16:18",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3111,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "602:7:18",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3114,
            "mutability": "mutable",
            "name": "ERC1155Id",
            "nameLocation": "632:9:18",
            "nodeType": "VariableDeclaration",
            "scope": 3115,
            "src": "624:17:18",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3113,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "624:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          }
        ],
        "name": "Currency",
        "nameLocation": "468:8:18",
        "nodeType": "StructDefinition",
        "scope": 3423,
        "src": "461:237:18",
        "visibility": "public"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 3116,
          "nodeType": "StructuredDocumentation",
          "src": "700:202:18",
          "text": " @title 💴 Currency contract that maintains an internal currency listings\n @notice This listing is referred to in all future bonds and\n collateral structures, used to figure out payment."
        },
        "fullyImplemented": true,
        "id": 3422,
        "linearizedBaseContracts": [
          3422
        ],
        "name": "CurrencyManager",
        "nameLocation": "912:15:18",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 3117,
              "nodeType": "StructuredDocumentation",
              "src": "969:181:18",
              "text": " @notice Array holding currency listing.\n @dev Note that position 0 will always be taken by the Ethereum\n currency type, as ensured by the constructor."
            },
            "functionSelector": "f6d1c271",
            "id": 3121,
            "mutability": "mutable",
            "name": "currencies",
            "nameLocation": "1173:10:18",
            "nodeType": "VariableDeclaration",
            "scope": 3422,
            "src": "1155:28:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Currency_$3115_storage_$dyn_storage",
              "typeString": "struct Currency[]"
            },
            "typeName": {
              "baseType": {
                "id": 3119,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 3118,
                  "name": "Currency",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3115,
                  "src": "1155:8:18"
                },
                "referencedDeclaration": 3115,
                "src": "1155:8:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Currency_$3115_storage_ptr",
                  "typeString": "struct Currency"
                }
              },
              "id": 3120,
              "nodeType": "ArrayTypeName",
              "src": "1155:10:18",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Currency_$3115_storage_$dyn_storage_ptr",
                "typeString": "struct Currency[]"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 3122,
              "nodeType": "StructuredDocumentation",
              "src": "1190:59:18",
              "text": "@notice New currency has been added to internal listing"
            },
            "id": 3133,
            "name": "CurrencyAdded",
            "nameLocation": "1260:13:18",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3132,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3124,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1291:2:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 3133,
                  "src": "1283:10:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3123,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1283:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3127,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "currencyType",
                  "nameLocation": "1316:12:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 3133,
                  "src": "1303:25:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_CurrencyType_$3105",
                    "typeString": "enum CurrencyType"
                  },
                  "typeName": {
                    "id": 3126,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3125,
                      "name": "CurrencyType",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3105,
                      "src": "1303:12:18"
                    },
                    "referencedDeclaration": 3105,
                    "src": "1303:12:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_CurrencyType_$3105",
                      "typeString": "enum CurrencyType"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3129,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "location",
                  "nameLocation": "1346:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 3133,
                  "src": "1338:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3128,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1338:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3131,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ERC1155Id",
                  "nameLocation": "1372:9:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 3133,
                  "src": "1364:17:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3130,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1364:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1273:114:18"
            },
            "src": "1254:134:18"
          },
          {
            "body": {
              "id": 3151,
              "nodeType": "Block",
              "src": "1408:80:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 3140,
                              "name": "CurrencyType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3105,
                              "src": "1443:12:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_CurrencyType_$3105_$",
                                "typeString": "type(enum CurrencyType)"
                              }
                            },
                            "id": 3141,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Ether",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3100,
                            "src": "1443:18:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_CurrencyType_$3105",
                              "typeString": "enum CurrencyType"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 3142,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1463:1:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 3145,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1474:1:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 3144,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1466:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 3143,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1466:7:18",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3146,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1466:10:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 3147,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1478:1:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_CurrencyType_$3105",
                              "typeString": "enum CurrencyType"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 3139,
                          "name": "Currency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3115,
                          "src": "1434:8:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Currency_$3115_storage_ptr_$",
                            "typeString": "type(struct Currency storage pointer)"
                          }
                        },
                        "id": 3148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1434:46:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Currency_$3115_memory_ptr",
                          "typeString": "struct Currency memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Currency_$3115_memory_ptr",
                          "typeString": "struct Currency memory"
                        }
                      ],
                      "expression": {
                        "id": 3136,
                        "name": "currencies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3121,
                        "src": "1418:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Currency_$3115_storage_$dyn_storage",
                          "typeString": "struct Currency storage ref[] storage ref"
                        }
                      },
                      "id": 3138,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1418:15:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Currency_$3115_storage_$dyn_storage_ptr_$_t_struct$_Currency_$3115_storage_$returns$__$bound_to$_t_array$_t_struct$_Currency_$3115_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Currency storage ref[] storage pointer,struct Currency storage ref)"
                      }
                    },
                    "id": 3149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1418:63:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3150,
                  "nodeType": "ExpressionStatement",
                  "src": "1418:63:18"
                }
              ]
            },
            "id": 3152,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1405:2:18"
            },
            "returnParameters": {
              "id": 3135,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1408:0:18"
            },
            "scope": 3422,
            "src": "1394:94:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3168,
              "nodeType": "Block",
              "src": "1690:75:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 3160,
                              "name": "CurrencyType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3105,
                              "src": "1722:12:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_CurrencyType_$3105_$",
                                "typeString": "type(enum CurrencyType)"
                              }
                            },
                            "id": 3161,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ERC20",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3101,
                            "src": "1722:18:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_CurrencyType_$3105",
                              "typeString": "enum CurrencyType"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 3162,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1742:1:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "id": 3163,
                            "name": "location",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3155,
                            "src": "1745:8:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 3164,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1755:1:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_CurrencyType_$3105",
                              "typeString": "enum CurrencyType"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 3159,
                          "name": "Currency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3115,
                          "src": "1713:8:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Currency_$3115_storage_ptr_$",
                            "typeString": "type(struct Currency storage pointer)"
                          }
                        },
                        "id": 3165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1713:44:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Currency_$3115_memory_ptr",
                          "typeString": "struct Currency memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Currency_$3115_memory_ptr",
                          "typeString": "struct Currency memory"
                        }
                      ],
                      "id": 3158,
                      "name": "_addCurrency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3421,
                      "src": "1700:12:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Currency_$3115_memory_ptr_$returns$__$",
                        "typeString": "function (struct Currency memory)"
                      }
                    },
                    "id": 3166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1700:58:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3167,
                  "nodeType": "ExpressionStatement",
                  "src": "1700:58:18"
                }
              ]
            },
            "documentation": {
              "id": 3153,
              "nodeType": "StructuredDocumentation",
              "src": "1494:124:18",
              "text": " @notice Add a new currency of type ERC20\n @param location address of the ERC20 contract being added"
            },
            "functionSelector": "fe9accf9",
            "id": 3169,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addERC20Currency",
            "nameLocation": "1632:16:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3156,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3155,
                  "mutability": "mutable",
                  "name": "location",
                  "nameLocation": "1657:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 3169,
                  "src": "1649:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3154,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1649:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1648:18:18"
            },
            "returnParameters": {
              "id": 3157,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1690:0:18"
            },
            "scope": 3422,
            "src": "1623:142:18",
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3185,
              "nodeType": "Block",
              "src": "1967:76:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 3177,
                              "name": "CurrencyType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3105,
                              "src": "1999:12:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_CurrencyType_$3105_$",
                                "typeString": "type(enum CurrencyType)"
                              }
                            },
                            "id": 3178,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ERC721",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3102,
                            "src": "1999:19:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_CurrencyType_$3105",
                              "typeString": "enum CurrencyType"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 3179,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2020:1:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "id": 3180,
                            "name": "location",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3172,
                            "src": "2023:8:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 3181,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2033:1:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_CurrencyType_$3105",
                              "typeString": "enum CurrencyType"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 3176,
                          "name": "Currency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3115,
                          "src": "1990:8:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Currency_$3115_storage_ptr_$",
                            "typeString": "type(struct Currency storage pointer)"
                          }
                        },
                        "id": 3182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1990:45:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Currency_$3115_memory_ptr",
                          "typeString": "struct Currency memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Currency_$3115_memory_ptr",
                          "typeString": "struct Currency memory"
                        }
                      ],
                      "id": 3175,
                      "name": "_addCurrency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3421,
                      "src": "1977:12:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Currency_$3115_memory_ptr_$returns$__$",
                        "typeString": "function (struct Currency memory)"
                      }
                    },
                    "id": 3183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1977:59:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3184,
                  "nodeType": "ExpressionStatement",
                  "src": "1977:59:18"
                }
              ]
            },
            "documentation": {
              "id": 3170,
              "nodeType": "StructuredDocumentation",
              "src": "1771:123:18",
              "text": " @dev Add a new currency of type ERC721\n @param location address of the ERC721 contract being added"
            },
            "functionSelector": "cd30e2cd",
            "id": 3186,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addERC721Currency",
            "nameLocation": "1908:17:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3173,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3172,
                  "mutability": "mutable",
                  "name": "location",
                  "nameLocation": "1934:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 3186,
                  "src": "1926:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3171,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1926:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1925:18:18"
            },
            "returnParameters": {
              "id": 3174,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1967:0:18"
            },
            "scope": 3422,
            "src": "1899:144:18",
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3224,
              "nodeType": "Block",
              "src": "2601:273:18",
              "statements": [
                {
                  "assignments": [
                    3196
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3196,
                      "mutability": "mutable",
                      "name": "c",
                      "nameLocation": "2627:1:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 3224,
                      "src": "2611:17:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Currency_$3115_memory_ptr",
                        "typeString": "struct Currency"
                      },
                      "typeName": {
                        "id": 3195,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3194,
                          "name": "Currency",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3115,
                          "src": "2611:8:18"
                        },
                        "referencedDeclaration": 3115,
                        "src": "2611:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Currency_$3115_storage_ptr",
                          "typeString": "struct Currency"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3207,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3198,
                          "name": "CurrencyType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3105,
                          "src": "2653:12:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_CurrencyType_$3105_$",
                            "typeString": "type(enum CurrencyType)"
                          }
                        },
                        "id": 3199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "ERC1155Token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3103,
                        "src": "2653:25:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CurrencyType_$3105",
                          "typeString": "enum CurrencyType"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 3202,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3191,
                            "src": "2699:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 3201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2692:6:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint88_$",
                            "typeString": "type(uint88)"
                          },
                          "typeName": {
                            "id": 3200,
                            "name": "uint88",
                            "nodeType": "ElementaryTypeName",
                            "src": "2692:6:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2692:15:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint88",
                          "typeString": "uint88"
                        }
                      },
                      {
                        "id": 3204,
                        "name": "location",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3189,
                        "src": "2721:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 3205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2743:1:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_CurrencyType_$3105",
                          "typeString": "enum CurrencyType"
                        },
                        {
                          "typeIdentifier": "t_uint88",
                          "typeString": "uint88"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 3197,
                      "name": "Currency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3115,
                      "src": "2631:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Currency_$3115_storage_ptr_$",
                        "typeString": "type(struct Currency storage pointer)"
                      }
                    },
                    "id": 3206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2631:123:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Currency_$3115_memory_ptr",
                      "typeString": "struct Currency memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2611:143:18"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 3208,
                        "name": "c",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3196,
                        "src": "2768:1:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Currency_$3115_memory_ptr",
                          "typeString": "struct Currency memory"
                        }
                      },
                      "id": 3209,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ERC1155SmallId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3110,
                      "src": "2768:16:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint88",
                        "typeString": "uint88"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 3210,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3191,
                      "src": "2788:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2768:27:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3219,
                  "nodeType": "IfStatement",
                  "src": "2764:79:18",
                  "trueBody": {
                    "id": 3218,
                    "nodeType": "Block",
                    "src": "2797:46:18",
                    "statements": [
                      {
                        "expression": {
                          "id": 3216,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 3212,
                              "name": "c",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3196,
                              "src": "2811:1:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Currency_$3115_memory_ptr",
                                "typeString": "struct Currency memory"
                              }
                            },
                            "id": 3214,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "ERC1155Id",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3114,
                            "src": "2811:11:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3215,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3191,
                            "src": "2825:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2811:21:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3217,
                        "nodeType": "ExpressionStatement",
                        "src": "2811:21:18"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3221,
                        "name": "c",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3196,
                        "src": "2865:1:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Currency_$3115_memory_ptr",
                          "typeString": "struct Currency memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Currency_$3115_memory_ptr",
                          "typeString": "struct Currency memory"
                        }
                      ],
                      "id": 3220,
                      "name": "_addCurrency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3421,
                      "src": "2852:12:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Currency_$3115_memory_ptr_$returns$__$",
                        "typeString": "function (struct Currency memory)"
                      }
                    },
                    "id": 3222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2852:15:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3223,
                  "nodeType": "ExpressionStatement",
                  "src": "2852:15:18"
                }
              ]
            },
            "documentation": {
              "id": 3187,
              "nodeType": "StructuredDocumentation",
              "src": "2049:428:18",
              "text": " @notice Add a new currency of type ERC1155 Token\n @param location address of the ERC1155 contract being added\n @param tokenId specific tokenId to associate with this ERC1155\n currency listing.\n @dev TokenId is required because structures that reference\n this currency are only able to specify one field -- the amount, and\n so the tokenId must be constant and specified here"
            },
            "functionSelector": "68b0d5a8",
            "id": 3225,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addERC1155TokenCurrency",
            "nameLocation": "2491:23:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3189,
                  "mutability": "mutable",
                  "name": "location",
                  "nameLocation": "2523:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 3225,
                  "src": "2515:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3188,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2515:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3191,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2541:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 3225,
                  "src": "2533:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3190,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2533:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2514:35:18"
            },
            "returnParameters": {
              "id": 3193,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2601:0:18"
            },
            "scope": 3422,
            "src": "2482:392:18",
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3241,
              "nodeType": "Block",
              "src": "3269:80:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 3233,
                              "name": "CurrencyType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3105,
                              "src": "3301:12:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_CurrencyType_$3105_$",
                                "typeString": "type(enum CurrencyType)"
                              }
                            },
                            "id": 3234,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ERC1155NFT",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3104,
                            "src": "3301:23:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_CurrencyType_$3105",
                              "typeString": "enum CurrencyType"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 3235,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3326:1:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "id": 3236,
                            "name": "location",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3228,
                            "src": "3329:8:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 3237,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3339:1:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_CurrencyType_$3105",
                              "typeString": "enum CurrencyType"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 3232,
                          "name": "Currency",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3115,
                          "src": "3292:8:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Currency_$3115_storage_ptr_$",
                            "typeString": "type(struct Currency storage pointer)"
                          }
                        },
                        "id": 3238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3292:49:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Currency_$3115_memory_ptr",
                          "typeString": "struct Currency memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Currency_$3115_memory_ptr",
                          "typeString": "struct Currency memory"
                        }
                      ],
                      "id": 3231,
                      "name": "_addCurrency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3421,
                      "src": "3279:12:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Currency_$3115_memory_ptr_$returns$__$",
                        "typeString": "function (struct Currency memory)"
                      }
                    },
                    "id": 3239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3279:63:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3240,
                  "nodeType": "ExpressionStatement",
                  "src": "3279:63:18"
                }
              ]
            },
            "documentation": {
              "id": 3226,
              "nodeType": "StructuredDocumentation",
              "src": "2880:312:18",
              "text": " @notice Add a new currency of type ERC1155 NFT.\n @dev Note that no tokenId is required -- since we know the count to\n be 1, the structures that reference this currency can use their\n field to specify the tokenId.\n @param location address of ERC1155 contract being added"
            },
            "functionSelector": "1f5e180e",
            "id": 3242,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addERC1155NFTCurrency",
            "nameLocation": "3206:21:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3229,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3228,
                  "mutability": "mutable",
                  "name": "location",
                  "nameLocation": "3236:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 3242,
                  "src": "3228:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3227,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3228:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3227:18:18"
            },
            "returnParameters": {
              "id": 3230,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3269:0:18"
            },
            "scope": 3422,
            "src": "3197:152:18",
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3368,
              "nodeType": "Block",
              "src": "4082:1041:18",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_CurrencyType_$3105",
                      "typeString": "enum CurrencyType"
                    },
                    "id": 3263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 3259,
                        "name": "cur",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3246,
                        "src": "4096:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Currency_$3115_storage_ptr",
                          "typeString": "struct Currency storage pointer"
                        }
                      },
                      "id": 3260,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "currencyType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3108,
                      "src": "4096:16:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_CurrencyType_$3105",
                        "typeString": "enum CurrencyType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 3261,
                        "name": "CurrencyType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3105,
                        "src": "4116:12:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_CurrencyType_$3105_$",
                          "typeString": "type(enum CurrencyType)"
                        }
                      },
                      "id": 3262,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ERC20",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3101,
                      "src": "4116:18:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_CurrencyType_$3105",
                        "typeString": "enum CurrencyType"
                      }
                    },
                    "src": "4096:38:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_CurrencyType_$3105",
                        "typeString": "enum CurrencyType"
                      },
                      "id": 3297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 3293,
                          "name": "cur",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3246,
                          "src": "4383:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Currency_$3115_storage_ptr",
                            "typeString": "struct Currency storage pointer"
                          }
                        },
                        "id": 3294,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "currencyType",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3108,
                        "src": "4383:16:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CurrencyType_$3105",
                          "typeString": "enum CurrencyType"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 3295,
                          "name": "CurrencyType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3105,
                          "src": "4403:12:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_CurrencyType_$3105_$",
                            "typeString": "type(enum CurrencyType)"
                          }
                        },
                        "id": 3296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "ERC721",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3102,
                        "src": "4403:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CurrencyType_$3105",
                          "typeString": "enum CurrencyType"
                        }
                      },
                      "src": "4383:39:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_enum$_CurrencyType_$3105",
                          "typeString": "enum CurrencyType"
                        },
                        "id": 3314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3310,
                            "name": "cur",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3246,
                            "src": "4523:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Currency_$3115_storage_ptr",
                              "typeString": "struct Currency storage pointer"
                            }
                          },
                          "id": 3311,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "currencyType",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3108,
                          "src": "4523:16:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_CurrencyType_$3105",
                            "typeString": "enum CurrencyType"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 3312,
                            "name": "CurrencyType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3105,
                            "src": "4543:12:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_CurrencyType_$3105_$",
                              "typeString": "type(enum CurrencyType)"
                            }
                          },
                          "id": 3313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "ERC1155Token",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3103,
                          "src": "4543:25:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_CurrencyType_$3105",
                            "typeString": "enum CurrencyType"
                          }
                        },
                        "src": "4523:45:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_CurrencyType_$3105",
                            "typeString": "enum CurrencyType"
                          },
                          "id": 3348,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 3344,
                              "name": "cur",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3246,
                              "src": "4862:3:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Currency_$3115_storage_ptr",
                                "typeString": "struct Currency storage pointer"
                              }
                            },
                            "id": 3345,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "currencyType",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3108,
                            "src": "4862:16:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_CurrencyType_$3105",
                              "typeString": "enum CurrencyType"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 3346,
                              "name": "CurrencyType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3105,
                              "src": "4882:12:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_CurrencyType_$3105_$",
                                "typeString": "type(enum CurrencyType)"
                              }
                            },
                            "id": 3347,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ERC1155NFT",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3104,
                            "src": "4882:23:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_CurrencyType_$3105",
                              "typeString": "enum CurrencyType"
                            }
                          },
                          "src": "4862:43:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3362,
                        "nodeType": "IfStatement",
                        "src": "4858:238:18",
                        "trueBody": {
                          "id": 3361,
                          "nodeType": "Block",
                          "src": "4907:189:18",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 3354,
                                    "name": "from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3248,
                                    "src": "4978:4:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 3355,
                                    "name": "to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3250,
                                    "src": "5000:2:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 3356,
                                    "name": "amountOrId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3252,
                                    "src": "5020:10:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "hexValue": "31",
                                    "id": 3357,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5048:1:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  {
                                    "id": 3358,
                                    "name": "data",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3254,
                                    "src": "5067:4:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 3350,
                                          "name": "cur",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3246,
                                          "src": "4930:3:18",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Currency_$3115_storage_ptr",
                                            "typeString": "struct Currency storage pointer"
                                          }
                                        },
                                        "id": 3351,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "location",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 3112,
                                        "src": "4930:12:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 3349,
                                      "name": "IERC1155",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1310,
                                      "src": "4921:8:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC1155_$1310_$",
                                        "typeString": "type(contract IERC1155)"
                                      }
                                    },
                                    "id": 3352,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4921:22:18",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC1155_$1310",
                                      "typeString": "contract IERC1155"
                                    }
                                  },
                                  "id": 3353,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "safeTransferFrom",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1293,
                                  "src": "4921:39:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                                    "typeString": "function (address,address,uint256,uint256,bytes memory) external"
                                  }
                                },
                                "id": 3359,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4921:164:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3360,
                              "nodeType": "ExpressionStatement",
                              "src": "4921:164:18"
                            }
                          ]
                        }
                      },
                      "id": 3363,
                      "nodeType": "IfStatement",
                      "src": "4519:577:18",
                      "trueBody": {
                        "id": 3343,
                        "nodeType": "Block",
                        "src": "4570:282:18",
                        "statements": [
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3318,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 3315,
                                  "name": "cur",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3246,
                                  "src": "4588:3:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Currency_$3115_storage_ptr",
                                    "typeString": "struct Currency storage pointer"
                                  }
                                },
                                "id": 3316,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "ERC1155Id",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3114,
                                "src": "4588:13:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 3317,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4605:1:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "4588:18:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 3329,
                            "nodeType": "IfStatement",
                            "src": "4584:67:18",
                            "trueBody": {
                              "expression": {
                                "id": 3327,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 3319,
                                    "name": "cur",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3246,
                                    "src": "4608:3:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Currency_$3115_storage_ptr",
                                      "typeString": "struct Currency storage pointer"
                                    }
                                  },
                                  "id": 3321,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "ERC1155Id",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3114,
                                  "src": "4608:13:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 3324,
                                        "name": "cur",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3246,
                                        "src": "4632:3:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Currency_$3115_storage_ptr",
                                          "typeString": "struct Currency storage pointer"
                                        }
                                      },
                                      "id": 3325,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "ERC1155SmallId",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 3110,
                                      "src": "4632:18:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint88",
                                        "typeString": "uint88"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint88",
                                        "typeString": "uint88"
                                      }
                                    ],
                                    "id": 3323,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4624:7:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 3322,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4624:7:18",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 3326,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4624:27:18",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4608:43:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3328,
                              "nodeType": "ExpressionStatement",
                              "src": "4608:43:18"
                            }
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 3335,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3248,
                                  "src": "4722:4:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 3336,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3250,
                                  "src": "4744:2:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 3337,
                                    "name": "cur",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3246,
                                    "src": "4764:3:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Currency_$3115_storage_ptr",
                                      "typeString": "struct Currency storage pointer"
                                    }
                                  },
                                  "id": 3338,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "ERC1155Id",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3114,
                                  "src": "4764:13:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 3339,
                                  "name": "amountOrId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3252,
                                  "src": "4795:10:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 3340,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3254,
                                  "src": "4823:4:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 3331,
                                        "name": "cur",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3246,
                                        "src": "4674:3:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Currency_$3115_storage_ptr",
                                          "typeString": "struct Currency storage pointer"
                                        }
                                      },
                                      "id": 3332,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "location",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 3112,
                                      "src": "4674:12:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 3330,
                                    "name": "IERC1155",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1310,
                                    "src": "4665:8:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IERC1155_$1310_$",
                                      "typeString": "type(contract IERC1155)"
                                    }
                                  },
                                  "id": 3333,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4665:22:18",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC1155_$1310",
                                    "typeString": "contract IERC1155"
                                  }
                                },
                                "id": 3334,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "safeTransferFrom",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1293,
                                "src": "4665:39:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                                  "typeString": "function (address,address,uint256,uint256,bytes memory) external"
                                }
                              },
                              "id": 3341,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4665:176:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 3342,
                            "nodeType": "ExpressionStatement",
                            "src": "4665:176:18"
                          }
                        ]
                      }
                    },
                    "id": 3364,
                    "nodeType": "IfStatement",
                    "src": "4379:717:18",
                    "trueBody": {
                      "id": 3309,
                      "nodeType": "Block",
                      "src": "4424:89:18",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 3303,
                                "name": "from",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3248,
                                "src": "4477:4:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 3304,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3250,
                                "src": "4483:2:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 3305,
                                "name": "amountOrId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3252,
                                "src": "4487:10:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "",
                                "id": 3306,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4499:2:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                "value": ""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 3299,
                                      "name": "cur",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3246,
                                      "src": "4446:3:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Currency_$3115_storage_ptr",
                                        "typeString": "struct Currency storage pointer"
                                      }
                                    },
                                    "id": 3300,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "location",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3112,
                                    "src": "4446:12:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 3298,
                                  "name": "IERC721",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2131,
                                  "src": "4438:7:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC721_$2131_$",
                                    "typeString": "type(contract IERC721)"
                                  }
                                },
                                "id": 3301,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4438:21:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC721_$2131",
                                  "typeString": "contract IERC721"
                                }
                              },
                              "id": 3302,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "safeTransferFrom",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2130,
                              "src": "4438:38:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (address,address,uint256,bytes memory) external"
                              }
                            },
                            "id": 3307,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4438:64:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 3308,
                          "nodeType": "ExpressionStatement",
                          "src": "4438:64:18"
                        }
                      ]
                    }
                  },
                  "id": 3365,
                  "nodeType": "IfStatement",
                  "src": "4092:1004:18",
                  "trueBody": {
                    "id": 3292,
                    "nodeType": "Block",
                    "src": "4136:237:18",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3264,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3248,
                            "src": "4154:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 3267,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "4170:4:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CurrencyManager_$3422",
                                  "typeString": "contract CurrencyManager"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CurrencyManager_$3422",
                                  "typeString": "contract CurrencyManager"
                                }
                              ],
                              "id": 3266,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4162:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 3265,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4162:7:18",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3268,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4162:13:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4154:21:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 3290,
                          "nodeType": "Block",
                          "src": "4268:95:18",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 3285,
                                    "name": "from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3248,
                                    "src": "4327:4:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 3286,
                                    "name": "to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3250,
                                    "src": "4333:2:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 3287,
                                    "name": "amountOrId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3252,
                                    "src": "4337:10:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 3281,
                                          "name": "cur",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3246,
                                          "src": "4300:3:18",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Currency_$3115_storage_ptr",
                                            "typeString": "struct Currency storage pointer"
                                          }
                                        },
                                        "id": 3282,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "location",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 3112,
                                        "src": "4300:12:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 3280,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1990,
                                      "src": "4293:6:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$1990_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 3283,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4293:20:18",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$1990",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 3284,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transferFrom",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1971,
                                  "src": "4293:33:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 3288,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4293:55:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "functionReturnParameters": 3258,
                              "id": 3289,
                              "nodeType": "Return",
                              "src": "4286:62:18"
                            }
                          ]
                        },
                        "id": 3291,
                        "nodeType": "IfStatement",
                        "src": "4150:213:18",
                        "trueBody": {
                          "id": 3279,
                          "nodeType": "Block",
                          "src": "4177:85:18",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 3275,
                                    "name": "to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3250,
                                    "src": "4232:2:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 3276,
                                    "name": "amountOrId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3252,
                                    "src": "4236:10:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 3271,
                                          "name": "cur",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3246,
                                          "src": "4209:3:18",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Currency_$3115_storage_ptr",
                                            "typeString": "struct Currency storage pointer"
                                          }
                                        },
                                        "id": 3272,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "location",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 3112,
                                        "src": "4209:12:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 3270,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1990,
                                      "src": "4202:6:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$1990_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 3273,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4202:20:18",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$1990",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 3274,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1939,
                                  "src": "4202:29:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 3277,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4202:45:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "functionReturnParameters": 3258,
                              "id": 3278,
                              "nodeType": "Return",
                              "src": "4195:52:18"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 3366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5112:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 3258,
                  "id": 3367,
                  "nodeType": "Return",
                  "src": "5105:11:18"
                }
              ]
            },
            "documentation": {
              "id": 3243,
              "nodeType": "StructuredDocumentation",
              "src": "3355:531:18",
              "text": " @dev Safely tansfer any supported currency using its interface\n @param cur Currency type to transfer\n @param from Which address to transfer from\n @param to Which address to transfer to\n @param amountOrId Either amount or id.\n @param data bytes to pass on with the transaction\n @dev The amountOrId paramenter represents the missing integer\n that Currency doesn't store itself -- in the case of a fungible\n token, the amount, but in the case of an NFT, the token id."
            },
            "id": 3369,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transferGenericCurrency",
            "nameLocation": "3900:24:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3255,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3246,
                  "mutability": "mutable",
                  "name": "cur",
                  "nameLocation": "3951:3:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 3369,
                  "src": "3934:20:18",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Currency_$3115_storage_ptr",
                    "typeString": "struct Currency"
                  },
                  "typeName": {
                    "id": 3245,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3244,
                      "name": "Currency",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3115,
                      "src": "3934:8:18"
                    },
                    "referencedDeclaration": 3115,
                    "src": "3934:8:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Currency_$3115_storage_ptr",
                      "typeString": "struct Currency"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3248,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "3972:4:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 3369,
                  "src": "3964:12:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3247,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3964:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3250,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3994:2:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 3369,
                  "src": "3986:10:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3249,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3986:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3252,
                  "mutability": "mutable",
                  "name": "amountOrId",
                  "nameLocation": "4014:10:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 3369,
                  "src": "4006:18:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3251,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4006:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3254,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "4047:4:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 3369,
                  "src": "4034:17:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3253,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4034:5:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3924:133:18"
            },
            "returnParameters": {
              "id": 3258,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3257,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3369,
                  "src": "4076:4:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3256,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4076:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4075:6:18"
            },
            "scope": 3422,
            "src": "3891:1232:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3420,
              "nodeType": "Block",
              "src": "5319:356:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3379,
                        "name": "c",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3373,
                        "src": "5345:1:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Currency_$3115_memory_ptr",
                          "typeString": "struct Currency memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Currency_$3115_memory_ptr",
                          "typeString": "struct Currency memory"
                        }
                      ],
                      "expression": {
                        "id": 3376,
                        "name": "currencies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3121,
                        "src": "5329:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Currency_$3115_storage_$dyn_storage",
                          "typeString": "struct Currency storage ref[] storage ref"
                        }
                      },
                      "id": 3378,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "5329:15:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Currency_$3115_storage_$dyn_storage_ptr_$_t_struct$_Currency_$3115_storage_$returns$__$bound_to$_t_array$_t_struct$_Currency_$3115_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Currency storage ref[] storage pointer,struct Currency storage ref)"
                      }
                    },
                    "id": 3380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5329:18:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3381,
                  "nodeType": "ExpressionStatement",
                  "src": "5329:18:18"
                },
                {
                  "assignments": [
                    3383
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3383,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "5365:2:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 3420,
                      "src": "5357:10:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3382,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5357:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3385,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 3384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5370:1:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5357:14:18"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_CurrencyType_$3105",
                      "typeString": "enum CurrencyType"
                    },
                    "id": 3390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 3386,
                        "name": "c",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3373,
                        "src": "5385:1:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Currency_$3115_memory_ptr",
                          "typeString": "struct Currency memory"
                        }
                      },
                      "id": 3387,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "currencyType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3108,
                      "src": "5385:14:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_CurrencyType_$3105",
                        "typeString": "enum CurrencyType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 3388,
                        "name": "CurrencyType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3105,
                        "src": "5403:12:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_CurrencyType_$3105_$",
                          "typeString": "type(enum CurrencyType)"
                        }
                      },
                      "id": 3389,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ERC1155Token",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3103,
                      "src": "5403:25:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_CurrencyType_$3105",
                        "typeString": "enum CurrencyType"
                      }
                    },
                    "src": "5385:43:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3407,
                  "nodeType": "IfStatement",
                  "src": "5381:147:18",
                  "trueBody": {
                    "id": 3406,
                    "nodeType": "Block",
                    "src": "5430:98:18",
                    "statements": [
                      {
                        "expression": {
                          "id": 3394,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3391,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3383,
                            "src": "5444:2:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 3392,
                              "name": "c",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3373,
                              "src": "5449:1:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Currency_$3115_memory_ptr",
                                "typeString": "struct Currency memory"
                              }
                            },
                            "id": 3393,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ERC1155SmallId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3110,
                            "src": "5449:16:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint88",
                              "typeString": "uint88"
                            }
                          },
                          "src": "5444:21:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3395,
                        "nodeType": "ExpressionStatement",
                        "src": "5444:21:18"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3399,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 3396,
                              "name": "c",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3373,
                              "src": "5483:1:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Currency_$3115_memory_ptr",
                                "typeString": "struct Currency memory"
                              }
                            },
                            "id": 3397,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ERC1155Id",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3114,
                            "src": "5483:11:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 3398,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5498:1:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5483:16:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3405,
                        "nodeType": "IfStatement",
                        "src": "5479:38:18",
                        "trueBody": {
                          "expression": {
                            "id": 3403,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 3400,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3383,
                              "src": "5501:2:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "expression": {
                                "id": 3401,
                                "name": "c",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3373,
                                "src": "5506:1:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Currency_$3115_memory_ptr",
                                  "typeString": "struct Currency memory"
                                }
                              },
                              "id": 3402,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ERC1155Id",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3114,
                              "src": "5506:11:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5501:16:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3404,
                          "nodeType": "ExpressionStatement",
                          "src": "5501:16:18"
                        }
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3409,
                            "name": "currencies",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3121,
                            "src": "5569:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Currency_$3115_storage_$dyn_storage",
                              "typeString": "struct Currency storage ref[] storage ref"
                            }
                          },
                          "id": 3410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "5569:17:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 3411,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5589:1:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "5569:21:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 3413,
                          "name": "c",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3373,
                          "src": "5604:1:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Currency_$3115_memory_ptr",
                            "typeString": "struct Currency memory"
                          }
                        },
                        "id": 3414,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "currencyType",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3108,
                        "src": "5604:14:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CurrencyType_$3105",
                          "typeString": "enum CurrencyType"
                        }
                      },
                      {
                        "expression": {
                          "id": 3415,
                          "name": "c",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3373,
                          "src": "5632:1:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Currency_$3115_memory_ptr",
                            "typeString": "struct Currency memory"
                          }
                        },
                        "id": 3416,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "location",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3112,
                        "src": "5632:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3417,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3383,
                        "src": "5656:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_enum$_CurrencyType_$3105",
                          "typeString": "enum CurrencyType"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3408,
                      "name": "CurrencyAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3133,
                      "src": "5542:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_enum$_CurrencyType_$3105_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,enum CurrencyType,address,uint256)"
                      }
                    },
                    "id": 3418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5542:126:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3419,
                  "nodeType": "EmitStatement",
                  "src": "5537:131:18"
                }
              ]
            },
            "documentation": {
              "id": 3370,
              "nodeType": "StructuredDocumentation",
              "src": "5129:135:18",
              "text": " @dev Internal method to append a new currency efficiently.\n @param c pre-build Currency structure to be added."
            },
            "id": 3421,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_addCurrency",
            "nameLocation": "5278:12:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3374,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3373,
                  "mutability": "mutable",
                  "name": "c",
                  "nameLocation": "5307:1:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 3421,
                  "src": "5291:17:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Currency_$3115_memory_ptr",
                    "typeString": "struct Currency"
                  },
                  "typeName": {
                    "id": 3372,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3371,
                      "name": "Currency",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3115,
                      "src": "5291:8:18"
                    },
                    "referencedDeclaration": 3115,
                    "src": "5291:8:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Currency_$3115_storage_ptr",
                      "typeString": "struct Currency"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5290:19:18"
            },
            "returnParameters": {
              "id": 3375,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5319:0:18"
            },
            "scope": 3422,
            "src": "5269:406:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 3423,
        "src": "903:4774:18",
        "usedErrors": []
      }
    ],
    "src": "39:5639:18"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.6+commit.11564f7e.Linux.g++"
  },
  "networks": {},
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-07-22T16:48:15.658Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addERC1155NFTCurrency(address)": {
        "details": "Note that no tokenId is required -- since we know the count to be 1, the structures that reference this currency can use their field to specify the tokenId.",
        "params": {
          "location": "address of ERC1155 contract being added"
        }
      },
      "addERC1155TokenCurrency(address,uint256)": {
        "details": "TokenId is required because structures that reference this currency are only able to specify one field -- the amount, and so the tokenId must be constant and specified here",
        "params": {
          "location": "address of the ERC1155 contract being added",
          "tokenId": "specific tokenId to associate with this ERC1155 currency listing."
        }
      },
      "addERC20Currency(address)": {
        "params": {
          "location": "address of the ERC20 contract being added"
        }
      },
      "addERC721Currency(address)": {
        "details": "Add a new currency of type ERC721",
        "params": {
          "location": "address of the ERC721 contract being added"
        }
      }
    },
    "stateVariables": {
      "currencies": {
        "details": "Note that position 0 will always be taken by the Ethereum currency type, as ensured by the constructor."
      }
    },
    "title": "💴 Currency contract that maintains an internal currency listings",
    "version": 1
  },
  "userdoc": {
    "events": {
      "CurrencyAdded(uint256,uint8,address,uint256)": {
        "notice": "New currency has been added to internal listing"
      }
    },
    "kind": "user",
    "methods": {
      "addERC1155NFTCurrency(address)": {
        "notice": "Add a new currency of type ERC1155 NFT."
      },
      "addERC1155TokenCurrency(address,uint256)": {
        "notice": "Add a new currency of type ERC1155 Token"
      },
      "addERC20Currency(address)": {
        "notice": "Add a new currency of type ERC20"
      },
      "currencies(uint256)": {
        "notice": "Array holding currency listing."
      }
    },
    "notice": "This listing is referred to in all future bonds and collateral structures, used to figure out payment.",
    "version": 1
  }
}